// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
model User {
  id                  String        @id @default(cuid())  @map("_id")
  name                String
  avatarIndex         Int
  xp                  Int           @default(0)
  level               Int           @default(1)
  hydrationProgress   Int           @default(0)
  medicationProgress  Int           @default(0)

  tasks               Task[]
  achievements        Achievement[]
  cards               Card[]

  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
}

model Task {
  id                  String        @id @default(cuid())  @map("_id")
  title               String
  description         String?
  dueTime             DateTime?
  completedAt         DateTime?
  repeatDays          String[]      // ["Monday", "Wednesday"]
  alreadyCompletedToday Boolean     @default(false)
  isRepeat            Boolean       @default(false)

  user                User          @relation(fields: [userId], references: [id])
  userId              String

  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
}

model Achievement {
  id                  String        @id @default(cuid())  @map("_id")
  title               String
  description         String?
  unlockedAt          DateTime      @default(now())

  user                User          @relation(fields: [userId], references: [id])
  userId              String
}

model Card {
  id                  String        @id @default(cuid())  @map("_id")
  name                String
  description         String?
  image               String?       // URL nebo base64
  collectedAt         DateTime      @default(now())

  user                User          @relation(fields: [userId], references: [id])
  userId              String
}